lets think about this problem and let me knowif i shuld give more information to you to understand this issue better to solve it better.
So during the experimtn, user is going to do the experiment, in a way to grab one peg and move it to another locatin in the peg board. At the mean time, our system is detecting all the pegs in write and left frame using yolo, and find the best pairs out of all possible permutations and triangulate them and give us the 3D points of the peg. This works well as long as our yolo doesnt have any FN and FP due to some peg hovering each other or other issues. So what we are going to do is solving this issue by some thechniques (which you tell me if you think another technique is better). So i think after having 3D peg point after triangulation, giving them as a feedback to the system input, where the yolo detection inputs enters. So idealy we should have 6 2D coordiantes from each right and left frame. But if it not ideal, i mean if we have less or more than 6 in one or both frames or one of those 6 is not logical based on the previois frame information, we replace the previos coordiante of the peg with the current one which is wrong. Consider that our input is 2D and our feedback is 3D, so i should pass the peg 2D info in each frame with the coresponding 3D which triangulated form those two, and in next frame, check how thoser new two 2D coordiantes from yolo are logical and moved from the previous frame. If it is logical, we have the new coordiante for that peg from yolo, if not, we use previous frame info.
At the intial stage of the app, we should randomly give pegs indices, so we can work with them. So we will see which peg is the peg that user is moving. Obviosly movments of this peg would be more than other pegs untill user start grabbing othger peg with the tool. it think keeping track of moving peg would be helpful to find the frames relted to that when we are checking previous corrddintes to evalute coming frames.

This is the code i have currently. I just wrote a simple tracking which first of all initizlie the peg locations as we are sure yolo and everthing working well. So all 6 pegs are detected coorectly. After the pegs intilized, we shuold detect new frames is related to which previous frame, so it find the distances and try to keep track of pegs. But it is not working well. So please feel free to bring other idea rather than what i have or improve the current one. Again ask me if you have other question to clarify the problem for you better, so you can sole it better.
